getwd()
renv::snapshot()
renv::dependencies()
getwd()
setwd("/home/shadybea/Documents/IMS/2024 - 2025/Projects/Statistics4DS")
renv::init()
renv::status()
?renv::status
?renv::status()
?renv::status
citation()
contributors()
citation("dplyr")
citation("urca")
# Libraries
library(openxlsx)
library(openxlsx)
install.packages("openxlsx")
# Libraries
library(openxlsx)
library(tidyverse)
library(fpp3)
library(urca)
# Import the data
data <- read.csv("data/dataset.csv")
View(data)
str(data)
type(data)
typeof(data)
class(data)
as_tsibble(data, key=Country, index=Year)
# Convert to tsibble
ts <- as_tsibble(df, key=Country, index=Year)
View(ts)
View(ts)
# Convert to tsibble
ts <- as_tsibble(df, key=Country, index=Year)
# Libraries
library(openxlsx)
library(tidyverse)
library(fpp3)
library(urca)
# Import the data
df <- read.csv("data/dataset.csv")
# Convert to tsibble
ts <- as_tsibble(df, key=Country, index=Year)
View(ts)
class(ts)
ts$Country
ts[ts$Country = "CHN"]
ts[ts$Country == "CHN"]
ts[Country == "CHN"]
autoplot(ts)
rm(data)
rm(df)
# Autoplot each variable (excluding the index)
for (col in names(ts)[-1]) {  # Exclude the first column (index)
print(autoplot(ts, !!sym(col)) + ggtitle(paste("Autoplot of", col)))
}
# Plot heatmap using ggplot2
ggplot(cor_long, aes(Var1, Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
labs(title = "Heatmap of Pearson Correlation", x = "", y = "", fill = "Correlation") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Compute correlation (exclude non-numeric columns like the index)
cor_matrix <- cor(ts %>% select(-year))
# Compute correlation (exclude non-numeric columns like the index)
cor_matrix <- cor(ts %>% select(-Year))
# Libraries
library(openxlsx)
library(tidyverse)
library(fpp3)
library(urca)
# Import the data
df <- read.csv("data/dataset.csv")
# Convert to tsibble
ts <- as_tsibble(df, key=Country, index=Year)
rm(df) # Clean up
View(ts)
autoplot(ts)
# Autoplot each variable (excluding the index)
for (col in names(ts)[-1]) {  # Exclude the first column (index)
print(autoplot(ts, !!sym(col)) + ggtitle(paste("Autoplot of", col)))
}
# Compute correlation (exclude non-numeric columns like the index)
cor_matrix <- cor(ts %>% select(-Year))
# Libraries
library(openxlsx)
library(tidyverse)
library(fpp3)
library(urca)
# Import the data
df <- read.csv("data/dataset.csv")
# Convert to tsibble
ts <- as_tsibble(df, key=Country, index=Year)
rm(df) # Clean up
View(ts)
autoplot(ts)
# Autoplot each variable (excluding the index)
for (col in names(ts)[-1]) {  # Exclude the first column (index)
print(autoplot(ts, !!sym(col)) + ggtitle(paste("Autoplot of", col)))
}
# Ensure that we select only numeric columns
numeric_ts <- ts %>% select(where(is.numeric))
# Compute the correlation matrix (now with only numeric columns)
cor_matrix <- cor(numeric_ts)
numeric_ts
# Compute the correlation matrix (now with only numeric columns)
cor_matrix <- cor(numeric_ts)
# Convert the correlation matrix to a long format
cor_long <- as.data.frame(as.table(cor_matrix))
# Compute the correlation matrix (now with only numeric columns)
cor_matrix <- cor(numeric_ts)
# Ensure that we select only numeric columns
numeric_ts <- ts %>% select(where(is.numeric))
# Compute the correlation matrix (now with only numeric columns)
cor_matrix <- cor(numeric_ts)
numeric_ts
# Plot heatmap using ggplot2
ggplot(cor_matrix, aes(Var1, Var2, fill = Freq)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
labs(title = "Heatmap of Pearson Correlation", x = "", y = "", fill = "Correlation") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Compute the correlation matrix (now with only numeric columns)
cor_matrix <- cor(numeric_ts)
# Compute correlation (exclude non-numeric columns like the index)
cor_matrix <- cor(ts %>% select(-Year))
# Compute the correlation matrix (now with only numeric columns)
cor_matrix <- cor(numeric_ts)
# Convert the correlation matrix to a long format
cor_long <- as.data.frame(as.table(cor_matrix))
cor_matrix
# Ensure that we select only numeric columns
numeric_ts <- ts %>% select(where(is.numeric))
# Compute the correlation matrix (now with only numeric columns)
cor_matrix <- cor(numeric_ts)
numeric_ts
# Compute the correlation matrix (now with only numeric columns)
cor_matrix <- cor(numeric_ts)
# Ensure that we select only numeric columns
numeric_ts <- ts %>% select(where(is.numeric))
# Compute the correlation matrix (now with only numeric columns)
cor_matrix <- cor(numeric_ts)
cor(numeric_ts)
numeric_ts
autoplot(ts)
